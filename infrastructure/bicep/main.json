{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "17231432335196398694"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "The environment name (dev, staging, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources"
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "hike-planner",
      "metadata": {
        "description": "The application name prefix"
      }
    },
    "enableCosmosDbFreeTier": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable free tier for Cosmos DB (only one per subscription)"
      }
    },
    "cosmosDbThroughputMode": {
      "type": "string",
      "defaultValue": "provisioned",
      "allowedValues": [
        "provisioned",
        "serverless"
      ],
      "metadata": {
        "description": "Cosmos DB throughput mode"
      }
    },
    "budgetAlertEmail": {
      "type": "string",
      "defaultValue": "demo@example.com",
      "metadata": {
        "description": "Email address for budget alerts"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[take(uniqueString(resourceGroup().id), 6)]",
    "resourceNames": {
      "cosmosDbAccount": "[format('{0}-cosmos-{1}-{2}', parameters('appName'), parameters('environment'), variables('uniqueSuffix'))]",
      "keyVault": "[format('hkv-{0}-{1}', parameters('environment'), variables('uniqueSuffix'))]",
      "appServicePlan": "[format('{0}-plan-{1}-{2}', parameters('appName'), parameters('environment'), variables('uniqueSuffix'))]",
      "appService": "[format('{0}-api-{1}-{2}', parameters('appName'), parameters('environment'), variables('uniqueSuffix'))]",
      "budget": "[format('{0}-budget-{1}', parameters('appName'), parameters('environment'))]"
    }
  },
  "resources": {
    "keyVault": {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('resourceNames').keyVault]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "enableRbacAuthorization": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": "[if(equals(parameters('environment'), 'prod'), 90, 7)]",
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      },
      "tags": {
        "Environment": "[parameters('environment')]",
        "Application": "HikePlanner",
        "CostCenter": "Demo",
        "CostOptimization": "Standard",
        "ServiceTier": "Security"
      }
    },
    "cosmosDbPrimaryKeySecret": {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('resourceNames').keyVault, 'cosmos-db-primary-key')]",
      "properties": {
        "value": "[listOutputsWithSecureValues(resourceId('Microsoft.Resources/deployments', 'cosmosDb-deployment'), '2022-09-01').cosmosDbPrimaryKey]",
        "contentType": "text/plain"
      },
      "dependsOn": [
        "cosmosDb",
        "keyVault"
      ]
    },
    "cosmosDbEndpointSecret": {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('resourceNames').keyVault, 'cosmos-db-endpoint')]",
      "properties": {
        "value": "[listOutputsWithSecureValues(resourceId('Microsoft.Resources/deployments', 'cosmosDb-deployment'), '2022-09-01').cosmosDbEndpoint]",
        "contentType": "text/plain"
      },
      "dependsOn": [
        "cosmosDb",
        "keyVault"
      ]
    },
    "cosmosDb": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmosDb-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cosmosDbAccountName": {
            "value": "[variables('resourceNames').cosmosDbAccount]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "enableFreeTier": {
            "value": "[parameters('enableCosmosDbFreeTier')]"
          },
          "throughputMode": {
            "value": "[parameters('cosmosDbThroughputMode')]"
          },
          "minThroughput": {
            "value": 1000
          },
          "maxThroughput": {
            "value": 4000
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "10334324031889423984"
            }
          },
          "parameters": {
            "cosmosDbAccountName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Cosmos DB account"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for the Cosmos DB account"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment (dev, staging, prod)"
              }
            },
            "enableFreeTier": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable free tier (only one per subscription)"
              }
            },
            "throughputMode": {
              "type": "string",
              "defaultValue": "provisioned",
              "allowedValues": [
                "provisioned",
                "serverless"
              ],
              "metadata": {
                "description": "Throughput mode for Cosmos DB"
              }
            },
            "minThroughput": {
              "type": "int",
              "defaultValue": 1000,
              "metadata": {
                "description": "Minimum throughput for provisioned mode"
              }
            },
            "maxThroughput": {
              "type": "int",
              "defaultValue": 4000,
              "metadata": {
                "description": "Maximum throughput for autoscale"
              }
            }
          },
          "variables": {
            "cosmosDbSettings": {
              "dev": {
                "consistencyLevel": "Session",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false
              },
              "staging": {
                "consistencyLevel": "Session",
                "enableAutomaticFailover": true,
                "enableMultipleWriteLocations": false
              },
              "prod": {
                "consistencyLevel": "BoundedStaleness",
                "enableAutomaticFailover": true,
                "enableMultipleWriteLocations": true
              }
            },
            "containers": [
              {
                "name": "users",
                "partitionKey": "/partitionKey"
              },
              {
                "name": "trips",
                "partitionKey": "/partitionKey"
              },
              {
                "name": "trails",
                "partitionKey": "/partitionKey"
              }
            ]
          },
          "resources": {
            "cosmosDbAccount": {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2023-04-15",
              "name": "[parameters('cosmosDbAccountName')]",
              "location": "[parameters('location')]",
              "kind": "GlobalDocumentDB",
              "properties": {
                "enableFreeTier": "[parameters('enableFreeTier')]",
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "[variables('cosmosDbSettings')[parameters('environment')].consistencyLevel]"
                },
                "enableAutomaticFailover": "[variables('cosmosDbSettings')[parameters('environment')].enableAutomaticFailover]",
                "enableMultipleWriteLocations": "[variables('cosmosDbSettings')[parameters('environment')].enableMultipleWriteLocations]",
                "enableAnalyticalStorage": false,
                "networkAclBypass": "AzureServices",
                "publicNetworkAccess": "Enabled",
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": "[equals(parameters('environment'), 'prod')]"
                  }
                ]
              },
              "tags": {
                "Environment": "[parameters('environment')]",
                "Application": "HikePlanner",
                "CostCenter": "Demo"
              }
            },
            "database": {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), 'HikePlannerDB')]",
              "properties": "[if(equals(parameters('throughputMode'), 'serverless'), createObject('resource', createObject('id', 'HikePlannerDB')), createObject('resource', createObject('id', 'HikePlannerDB'), 'options', createObject('autoscaleSettings', createObject('maxThroughput', parameters('maxThroughput')))))]",
              "dependsOn": [
                "cosmosDbAccount"
              ]
            },
            "cosmosContainers": {
              "copy": {
                "name": "cosmosContainers",
                "count": "[length(variables('containers'))]"
              },
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'HikePlannerDB', variables('containers')[copyIndex()].name)]",
              "properties": "[if(equals(parameters('throughputMode'), 'serverless'), createObject('resource', createObject('id', variables('containers')[copyIndex()].name, 'partitionKey', createObject('paths', createArray(variables('containers')[copyIndex()].partitionKey), 'kind', 'Hash'))), createObject('resource', createObject('id', variables('containers')[copyIndex()].name, 'partitionKey', createObject('paths', createArray(variables('containers')[copyIndex()].partitionKey), 'kind', 'Hash')), 'options', createObject('throughput', parameters('minThroughput'))))]",
              "dependsOn": [
                "database"
              ]
            },
            "recommendationsContainer": {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'HikePlannerDB', 'recommendations')]",
              "properties": {
                "resource": {
                  "id": "recommendations",
                  "partitionKey": {
                    "paths": [
                      "/partitionKey"
                    ],
                    "kind": "Hash"
                  },
                  "defaultTtl": 2592000
                },
                "options": "[if(equals(parameters('throughputMode'), 'serverless'), createObject(), createObject('throughput', parameters('minThroughput')))]"
              },
              "dependsOn": [
                "database"
              ]
            }
          },
          "outputs": {
            "cosmosDbAccountName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Cosmos DB account"
              },
              "value": "[parameters('cosmosDbAccountName')]"
            },
            "cosmosDbEndpoint": {
              "type": "string",
              "metadata": {
                "description": "The endpoint of the Cosmos DB account"
              },
              "value": "[reference('cosmosDbAccount').documentEndpoint]"
            },
            "cosmosDbPrimaryKey": {
              "type": "securestring",
              "metadata": {
                "description": "The primary key of the Cosmos DB account"
              },
              "value": "[listKeys('cosmosDbAccount', '2023-04-15').primaryMasterKey]"
            },
            "cosmosDbConnectionString": {
              "type": "securestring",
              "metadata": {
                "description": "The connection string of the Cosmos DB account"
              },
              "value": "[listConnectionStrings('cosmosDbAccount', '2023-04-15').connectionStrings[0].connectionString]"
            },
            "cosmosDbResourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the Cosmos DB account"
              },
              "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
            },
            "databaseName": {
              "type": "string",
              "metadata": {
                "description": "The database name"
              },
              "value": "HikePlannerDB"
            }
          }
        }
      }
    },
    "appServicePlan": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appServicePlan-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('resourceNames').appServicePlan]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "skuName": {
            "value": "S3"
          },
          "skuCapacity": {
            "value": 1
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "8694164402386487558"
            }
          },
          "parameters": {
            "appServicePlanName": {
              "type": "string",
              "metadata": {
                "description": "The name of the App Service Plan"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for the App Service Plan"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment (dev, staging, prod)"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "S3",
              "metadata": {
                "description": "The SKU name for the App Service Plan"
              }
            },
            "skuCapacity": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "The SKU capacity"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2023-01-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
              },
              "kind": "app",
              "properties": {
                "reserved": false
              },
              "tags": {
                "Environment": "[parameters('environment')]",
                "Application": "HikePlanner",
                "CostCenter": "Demo"
              }
            }
          ],
          "outputs": {
            "appServicePlanId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the App Service Plan"
              },
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            },
            "appServicePlanName": {
              "type": "string",
              "metadata": {
                "description": "The name of the App Service Plan"
              },
              "value": "[parameters('appServicePlanName')]"
            },
            "appServicePlanSku": {
              "type": "object",
              "metadata": {
                "description": "The SKU of the App Service Plan"
              },
              "value": "[reference(resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')), '2023-01-01', 'full').sku]"
            }
          }
        }
      }
    },
    "appService": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appService-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServiceName": {
            "value": "[variables('resourceNames').appService]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "appServicePlanId": {
            "value": "[reference('appServicePlan').outputs.appServicePlanId.value]"
          },
          "keyVaultName": {
            "value": "[variables('resourceNames').keyVault]"
          },
          "cosmosDbEndpoint": {
            "value": "[listOutputsWithSecureValues(resourceId('Microsoft.Resources/deployments', 'cosmosDb-deployment'), '2022-09-01').cosmosDbEndpoint]"
          },
          "cosmosDbDatabaseName": {
            "value": "[listOutputsWithSecureValues(resourceId('Microsoft.Resources/deployments', 'cosmosDb-deployment'), '2022-09-01').databaseName]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "8647406744295223041"
            }
          },
          "parameters": {
            "appServiceName": {
              "type": "string",
              "metadata": {
                "description": "The name of the App Service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for the App Service"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment (dev, staging, prod)"
              }
            },
            "appServicePlanId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the App Service Plan"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "The Key Vault name for storing secrets"
              }
            },
            "cosmosDbEndpoint": {
              "type": "string",
              "metadata": {
                "description": "The Cosmos DB endpoint"
              }
            },
            "cosmosDbDatabaseName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Cosmos DB database"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('appServiceName')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "siteConfig": {
                  "nodeVersion": "~18",
                  "alwaysOn": true,
                  "ftpsState": "FtpsOnly",
                  "minTlsVersion": "1.2",
                  "http20Enabled": true,
                  "appSettings": [
                    {
                      "name": "NODE_ENV",
                      "value": "[if(equals(parameters('environment'), 'prod'), 'production', 'development')]"
                    },
                    {
                      "name": "AZURE_COSMOS_DB_ENDPOINT",
                      "value": "[parameters('cosmosDbEndpoint')]"
                    },
                    {
                      "name": "AZURE_COSMOS_DB_DATABASE",
                      "value": "[parameters('cosmosDbDatabaseName')]"
                    },
                    {
                      "name": "AZURE_COSMOS_DB_KEY",
                      "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}.vault.azure.net/secrets/cosmos-db-primary-key/)', parameters('keyVaultName'))]"
                    },
                    {
                      "name": "WEBSITE_NODE_DEFAULT_VERSION",
                      "value": "~18"
                    },
                    {
                      "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                      "value": "true"
                    }
                  ]
                },
                "clientAffinityEnabled": false
              },
              "tags": {
                "Environment": "[parameters('environment')]",
                "Application": "HikePlanner",
                "CostCenter": "Demo",
                "ServiceTier": "Backend"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/add', parameters('keyVaultName'))]",
              "properties": {
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-01-01', 'full').identity.principalId]",
                    "permissions": {
                      "secrets": [
                        "get",
                        "list"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            }
          ],
          "outputs": {
            "appServiceName": {
              "type": "string",
              "metadata": {
                "description": "The name of the App Service"
              },
              "value": "[parameters('appServiceName')]"
            },
            "appServiceDefaultHostname": {
              "type": "string",
              "metadata": {
                "description": "The default hostname of the App Service"
              },
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-01-01').defaultHostName]"
            },
            "appServicePrincipalId": {
              "type": "string",
              "metadata": {
                "description": "The principal ID of the App Service managed identity"
              },
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-01-01', 'full').identity.principalId]"
            },
            "appServiceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the App Service"
              },
              "value": "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "appServicePlan",
        "cosmosDb",
        "cosmosDbEndpointSecret",
        "cosmosDbPrimaryKeySecret",
        "keyVault"
      ]
    },
    "budgetAlerts": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "budgetAlerts-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "budgetName": {
            "value": "[variables('resourceNames').budget]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "alertEmail": {
            "value": "[parameters('budgetAlertEmail')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "8520178938126086792"
            }
          },
          "parameters": {
            "budgetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the budget"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment (dev, staging, prod)"
              }
            },
            "alertEmail": {
              "type": "string",
              "defaultValue": "demo@example.com",
              "metadata": {
                "description": "The email address for budget alerts"
              }
            },
            "budgetAmount": {
              "type": "int",
              "defaultValue": "[if(equals(parameters('environment'), 'prod'), 100, if(equals(parameters('environment'), 'staging'), 50, 25))]",
              "metadata": {
                "description": "Budget amount in USD"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Consumption/budgets",
              "apiVersion": "2023-05-01",
              "name": "[parameters('budgetName')]",
              "properties": {
                "category": "Cost",
                "amount": "[parameters('budgetAmount')]",
                "timeGrain": "Monthly",
                "timePeriod": {
                  "startDate": "2025-06-01",
                  "endDate": "2026-12-31"
                },
                "filter": {
                  "dimensions": {
                    "name": "ResourceGroupName",
                    "operator": "In",
                    "values": [
                      "[resourceGroup().name]"
                    ]
                  }
                },
                "notifications": {
                  "notification50": {
                    "enabled": true,
                    "operator": "GreaterThan",
                    "threshold": 50,
                    "contactEmails": [
                      "[parameters('alertEmail')]"
                    ],
                    "contactRoles": [
                      "Owner",
                      "Contributor"
                    ]
                  },
                  "notification80": {
                    "enabled": true,
                    "operator": "GreaterThan",
                    "threshold": 80,
                    "contactEmails": [
                      "[parameters('alertEmail')]"
                    ],
                    "contactRoles": [
                      "Owner",
                      "Contributor"
                    ]
                  },
                  "notification100": {
                    "enabled": true,
                    "operator": "GreaterThan",
                    "threshold": 100,
                    "contactEmails": [
                      "[parameters('alertEmail')]"
                    ],
                    "contactRoles": [
                      "Owner",
                      "Contributor"
                    ]
                  }
                }
              }
            },
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}-alerts', parameters('budgetName'))]",
              "location": "Global",
              "properties": {
                "groupShortName": "CostAlert",
                "enabled": true,
                "emailReceivers": [
                  {
                    "name": "CostAlertEmail",
                    "emailAddress": "[parameters('alertEmail')]",
                    "useCommonAlertSchema": true
                  }
                ]
              },
              "tags": {
                "Environment": "[parameters('environment')]",
                "Application": "HikePlanner",
                "CostCenter": "Demo",
                "AlertType": "CostManagement"
              }
            }
          ],
          "outputs": {
            "budgetId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the budget"
              },
              "value": "[resourceId('Microsoft.Consumption/budgets', parameters('budgetName'))]"
            },
            "budgetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the budget"
              },
              "value": "[parameters('budgetName')]"
            },
            "actionGroupId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the action group"
              },
              "value": "[resourceId('Microsoft.Insights/actionGroups', format('{0}-alerts', parameters('budgetName')))]"
            },
            "budgetSummary": {
              "type": "object",
              "metadata": {
                "description": "Budget configuration summary"
              },
              "value": {
                "budgetAmount": "[parameters('budgetAmount')]",
                "environment": "[parameters('environment')]",
                "thresholds": [
                  50,
                  80,
                  100
                ],
                "alertEmail": "[parameters('alertEmail')]"
              }
            }
          }
        }
      }
    }
  },
  "outputs": {
    "resourceNames": {
      "type": "object",
      "value": "[variables('resourceNames')]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[listOutputsWithSecureValues(resourceId('Microsoft.Resources/deployments', 'cosmosDb-deployment'), '2022-09-01').cosmosDbEndpoint]"
    },
    "cosmosDbAccountName": {
      "type": "string",
      "value": "[listOutputsWithSecureValues(resourceId('Microsoft.Resources/deployments', 'cosmosDb-deployment'), '2022-09-01').cosmosDbAccountName]"
    },
    "cosmosDbDatabaseName": {
      "type": "string",
      "value": "[listOutputsWithSecureValues(resourceId('Microsoft.Resources/deployments', 'cosmosDb-deployment'), '2022-09-01').databaseName]"
    },
    "cosmosDbPrimaryKey": {
      "type": "securestring",
      "value": "[listOutputsWithSecureValues(resourceId('Microsoft.Resources/deployments', 'cosmosDb-deployment'), '2022-09-01').cosmosDbPrimaryKey]"
    },
    "cosmosDbConnectionString": {
      "type": "securestring",
      "value": "[listOutputsWithSecureValues(resourceId('Microsoft.Resources/deployments', 'cosmosDb-deployment'), '2022-09-01').cosmosDbConnectionString]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('resourceNames').keyVault]"
    },
    "appServicePlanName": {
      "type": "string",
      "value": "[reference('appServicePlan').outputs.appServicePlanName.value]"
    },
    "appServicePlanSku": {
      "type": "object",
      "value": "[reference('appServicePlan').outputs.appServicePlanSku.value]"
    },
    "appServiceName": {
      "type": "string",
      "value": "[reference('appService').outputs.appServiceName.value]"
    },
    "appServiceUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference('appService').outputs.appServiceDefaultHostname.value)]"
    },
    "appServicePrincipalId": {
      "type": "string",
      "value": "[reference('appService').outputs.appServicePrincipalId.value]"
    },
    "budgetName": {
      "type": "string",
      "value": "[reference('budgetAlerts').outputs.budgetName.value]"
    },
    "budgetSummary": {
      "type": "object",
      "value": "[reference('budgetAlerts').outputs.budgetSummary.value]"
    }
  }
}